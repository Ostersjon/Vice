// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Venna.Data;

#nullable disable

namespace Venna.Migrations
{
    [DbContext(typeof(JollyContext))]
    partial class JollyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Venna.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Venna.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Userid")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Venna.Models.Cartitems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cartid")
                        .HasColumnType("int");

                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cartid");

                    b.HasIndex("Productid");

                    b.ToTable("Cartitems");
                });

            modelBuilder.Entity("Venna.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Venna.Models.CategoryCover", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<string>("FirstImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstLink")
                        .HasColumnType("int");

                    b.Property<string>("SecImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecLink")
                        .HasColumnType("int");

                    b.Property<string>("ThrdImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThrdLink")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Categoryid")
                        .IsUnique();

                    b.ToTable("CategoryCover");
                });

            modelBuilder.Entity("Venna.Models.MainImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("FifImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FifLink")
                        .HasColumnType("int");

                    b.Property<string>("FirstImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstLink")
                        .HasColumnType("int");

                    b.Property<string>("FrthImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrthLink")
                        .HasColumnType("int");

                    b.Property<string>("SecImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecLink")
                        .HasColumnType("int");

                    b.Property<string>("ThrdImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThrdLink")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Mainimg");
                });

            modelBuilder.Entity("Venna.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOrderd")
                        .HasColumnType("datetime2");

                    b.Property<string>("SippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Userid");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Venna.Models.Orderitems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Orderid")
                        .HasColumnType("int");

                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<int>("Quantity_Orderd")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Orderid");

                    b.HasIndex("Productid");

                    b.ToTable("Orderitems");
                });

            modelBuilder.Entity("Venna.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productinnerphotos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityinStock")
                        .HasColumnType("int");

                    b.Property<int>("Subcategoryid")
                        .HasColumnType("int");

                    b.Property<int>("brandid")
                        .HasColumnType("int");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.Property<int>("rateNO")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Subcategoryid");

                    b.HasIndex("brandid");

                    b.HasIndex("categoryid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Venna.Models.Review", b =>
                {
                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<byte>("Rate")
                        .HasColumnType("tinyint");

                    b.Property<string>("RateDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Userid", "Productid");

                    b.HasIndex("Productid");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Venna.Models.SubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Categoryid");

                    b.ToTable("SubCategorys");
                });

            modelBuilder.Entity("Venna.Models.SubCover", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("FirstImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstLink")
                        .HasColumnType("int");

                    b.Property<string>("SecImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecLink")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryid")
                        .HasColumnType("int");

                    b.Property<string>("ThrdImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThrdLink")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SubCategoryid")
                        .IsUnique();

                    b.ToTable("SubCovers");
                });

            modelBuilder.Entity("Venna.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Venna.Models.Cart", b =>
                {
                    b.HasOne("Venna.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Venna.Models.Cart", "Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Venna.Models.Cartitems", b =>
                {
                    b.HasOne("Venna.Models.Cart", "Cart")
                        .WithMany("Cartitems")
                        .HasForeignKey("Cartid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venna.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Venna.Models.CategoryCover", b =>
                {
                    b.HasOne("Venna.Models.Category", "Category")
                        .WithOne("CategoryCovers")
                        .HasForeignKey("Venna.Models.CategoryCover", "Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Venna.Models.Order", b =>
                {
                    b.HasOne("Venna.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Venna.Models.Orderitems", b =>
                {
                    b.HasOne("Venna.Models.Order", "Order")
                        .WithMany("Orderitems")
                        .HasForeignKey("Orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venna.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Venna.Models.Product", b =>
                {
                    b.HasOne("Venna.Models.SubCategory", "SubCategory")
                        .WithMany("products")
                        .HasForeignKey("Subcategoryid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Venna.Models.Brand", "brand")
                        .WithMany("Products")
                        .HasForeignKey("brandid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venna.Models.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");

                    b.Navigation("brand");

                    b.Navigation("category");
                });

            modelBuilder.Entity("Venna.Models.Review", b =>
                {
                    b.HasOne("Venna.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venna.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Venna.Models.SubCategory", b =>
                {
                    b.HasOne("Venna.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Venna.Models.SubCover", b =>
                {
                    b.HasOne("Venna.Models.SubCategory", "SubCategory")
                        .WithOne("SubCovers")
                        .HasForeignKey("Venna.Models.SubCover", "SubCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Venna.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Venna.Models.Cart", b =>
                {
                    b.Navigation("Cartitems");
                });

            modelBuilder.Entity("Venna.Models.Category", b =>
                {
                    b.Navigation("CategoryCovers")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Venna.Models.Order", b =>
                {
                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("Venna.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Venna.Models.SubCategory", b =>
                {
                    b.Navigation("SubCovers")
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("Venna.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
